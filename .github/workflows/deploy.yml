name: Build & Deploy

on:
  push:
    branches: [main]

env:
  REGISTRY: docker.io
  IMAGE_PREFIX: mabdelgawad94/automagic_developer

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app: [frontend, backend]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: mabdelgawad94
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.app }}
          push: true
          tags: |
            ${{ env.IMAGE_PREFIX }}:myreads-${{ matrix.app }}
            ${{ env.IMAGE_PREFIX }}:myreads-${{ matrix.app }}-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ vars.SERVER_HOST }}
          username: ${{ vars.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            set -euo pipefail
            
            echo "Starting deployment process..."
            echo "Server: $(hostname)"
            echo "User: $(whoami)"
            echo "Timestamp: $(date)"
            
            # Create project directory if it doesn't exist
            echo "Creating project directory ~/myreads if not exists..."
            mkdir -p ~/myreads
            cd ~/myreads
            echo "Current directory: $(pwd)"
            
            # Initialize or update git repository
            if [ -d ".git" ]; then
              echo "Git repository exists, pulling latest changes..."
              git pull origin main
            else
              echo "Initializing git repository..."
              git clone git@github.com:m-abdelgawad/myreads-full-stack-app.git .
            fi
            
            echo "Repository status:"
            git log --oneline -n 3
            
            # Create production secrets file
            echo "Creating production secrets..."
            mkdir -p backend
            cat > backend/.secrets.production <<EOF
            DB_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            SECRET_KEY=${{ secrets.SECRET_KEY }}
            EOF
            echo "Secrets file created"
            
            # Deploy with Docker Compose
            echo "Pulling latest Docker images..."
            docker compose -f docker-compose.prod.yml pull
            
            echo "Starting services..."
            docker compose -f docker-compose.prod.yml up -d --force-recreate
            
            echo "Verifying deployment..."
            sleep 5
            docker compose -f docker-compose.prod.yml ps
            
            echo "Cleaning up unused images..."
            docker image prune -f
            
            echo "Deployment completed successfully at $(date)"